#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#include "zmk-nodefree-config-main/helper.h"
#include "zmk-nodefree-config-main/keypos_def/keypos_36keys.h"             // keyposition helpers
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

#include "combos.dtsi"

#define BASE 0
#define NUM 1
#define FUNC 2
#define NAV 3
#define MISC 4

#define HM_TAPPING_TERM 300
#define HM_TAPPING_TERM_FAST 150

/* left-hand HRMs */
ZMK_BEHAVIOR(hml, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <HM_TAPPING_TERM>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    global-quick-tap-ms = <150>;         // requires PR #1387
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

/* left-hand Shift HRM */
ZMK_BEHAVIOR(hml_s, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <HM_TAPPING_TERM_FAST>;
    quick-tap-ms = <125>;                // repeat on tap-into-hold
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
)

/* right-hand HRMs */
ZMK_BEHAVIOR(hmr, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <HM_TAPPING_TERM>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    global-quick-tap-ms = <150>;         // requires PR #1387
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

/* right-hand Shift HRM */
ZMK_BEHAVIOR(hmr_s, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <HM_TAPPING_TERM_FAST>;
    quick-tap-ms = <125>;                // repeat on tap-into-hold
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
)

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <150>;
    quick-tap-ms = <125>;
    global-quick-tap;
};

&lt {
    tapping-term-ms = <200>;
    quick-tap-ms = <125>;
    global-quick-tap;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
&kp Q &kp W &kp F &kp P &bootloader                                        &kp J &kp L &kp U &kp Y &kp BACKSPACE
&hml LGUI A &hml LALT R &hml LCTRL S &hml_s LSHIFT T &kp G               &kp M &hmr_s RSHIFT N &hmr RCTRL E &hmr LALT I &kp SPACE
&kp Z &kp X &lt NAV C &kp D &kp V                                          &lt MISC K &lt FUNC H &lt NUM COMMA &kp PERIOD &hmr RGUI O
                        >;
                };
                
                NUM_layer {
                        bindings = <
&kp LEFT_BRACKET &kp N7 &kp N8 &kp N9 &kp RIGHT_BRACKET         &none &none &none &none &none 
&kp APOSTROPHE &kp N4 &kp N5 &kp N6 &kp EQUAL                    &none &kp RSHIFT &kp RCTRL &kp RALT &kp RGUI 
&kp N0 &kp N1 &kp N2 &kp N3 &kp BACKSLASH                    &none &none &none &none &none 
                        >;
                };
                
                FUNC_layer {
                        bindings = <
&kp F12 &kp F7 &kp F8 &kp F9 &none         &none &none &none &none &none 
&kp F11 &kp F4 &kp F5 &kp F6 &none         &none &kp RSHIFT &kp RCTRL &kp RALT &kp RGUI 
&kp F10 &kp F1 &kp F2 &kp F3 &none         &none &none &none &none &none 
                        >;
                };

                NAV_layer {
                        bindings = <
&none &none &none &none &none                           &none &none &none &none &none 
&kp LGUI &kp LALT &kp LCTRL &kp LSHIFT &none            &kp CAPSLOCK &kp LEFT_ARROW &kp DOWN_ARROW &kp UP_ARROW &kp RIGHT_ARROW 
&none &none &none &none &none                           &kp INSERT &kp HOME &kp PAGE_DOWN &kp PAGE_UP &kp END
                        >;
                };

                MISC_layer {
                        bindings = <
&bt BT_CLR      &bt BT_PRV      &bt BT_NXT      &bt BT_SEL 0    &none             &none &none &none &none            &to BASE
&sys_reset      &out OUT_BLE    &out OUT_USB    &none           &none             &none &none &none &none            &sys_reset
&none           &none           &none           &none           &bootloader       &none &none &none &none            &none 
                        >;
                };
        };        
};
