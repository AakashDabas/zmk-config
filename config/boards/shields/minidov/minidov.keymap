#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "zmk-helpers/key-labels/36.h"              
#include <behaviors/num_word.dtsi> // requires auto-layer module

#if CONFIG_WIRELESS
    #include <dt-bindings/zmk/bt.h>
    #define _BT_SEL_KEYS_ &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR
#else
    #define _BT_SEL_KEYS_ &trans &trans &trans &trans &trans
#endif

#include "zmk-helpers/helper.h"
#include "zmk-helpers/unicode-chars/greek.dtsi"

#define XXX &none
#define ___ &trans

/* Global settings */

#define QUICK_TAP_MS 175

                        // key-position labels
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_HOLD_TAP(NAME, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )
MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs

#define BASE 0
#define NAV 1
#define NUM 2
#define FUNC 3

/{
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
&kp Q &kp W &kp F &kp P &kp B                                   &kp J &kp L &kp U &kp Y &kp COLON
&hml LGUI A &hml LALT R &hml LCTRL S &hml LSHIFT T &kp G        &kp M &hmr RSHIFT N &hmr RCTRL E &hmr RALT I &hmr RGUI O
&kp Z &kp X &kp C &kp D &kp V                                   &kp K &kp H &kp COMMA &kp PERIOD &kp SLASH
        &lt NAV ESCAPE &kp SPACE  &kp TAB                       &kp RETURN  &lt NUM BACKSPACE &lt FUNC DELETE
                        >;
                };

                NAV {
                        bindings = <
&bootloader &none &none &none &none        &bootloader &none &none &none &none
&none &none &none &none &none              &none &kp LEFT &kp DOWN &kp UP &kp RIGHT
&none &none &none &none &none              &kp INSERT &kp HOME &kp PAGE_DOWN &kp PAGE_UP &kp END
        &kp ESCAPE &kp SPACE  &kp TAB      &kp RETURN  &kp BACKSPACE &kp DELETE
                        >;
                };

                NUM_layer {
                        bindings = <
&none  &kp N7 &kp N8 &kp N9 &none                    &none &none &none &none &none 
&none  &kp N4 &kp N5 &kp N6 &none                    &none &kp RSHIFT qq&kp RCTRL E &kp RALT I &kp RGUI O
&kp N0 &kp N1 &kp N2 &kp N3 &none                    &none &none &none &none &none
&none &none &none &none &none &none
                        >;
                };

                FUNC_layer {
                        bindings = <
&kp F12 &kp F7 &kp F8 &kp F9 &none         &none &none &none &none &none 
&kp F11 &kp F4 &kp F5 &kp F6 &none         &none &kp RSHIFT &kp RCTRL &kp RALT &kp RGUI 
&kp F10 &kp F1 &kp F2 &kp F3 &none         &none &none &none &none &none 
&none &none &none &none &none &none
                        >;
                };
        }; 
};