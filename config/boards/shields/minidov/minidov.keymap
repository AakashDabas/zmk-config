#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NUM 1
#define FUNC 2
#define NAV 3
#define MISC 4
#define NO_LEFT_MOD 5

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <150>;
    quick-tap-ms = <125>;
    global-quick-tap;
};

&lt {
    tapping_term_ms = <150>;
    quick-tap-ms = <125>;
    global-quick-tap;
};

/ {
        behaviors {
        lh_pht: left_hand_positional_hold_tap {
                compatible = "zmk,behavior-hold-tap";
                label = "LEFT_POSITIONAL_HOLD_TAP";
                #binding-cells = <2>;
                flavor = "tap-preferred";
                tapping-term-ms = <150>;
                quick-tap-ms = <125>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
                };

        rh_pht: right_hand_positional_hold_tap {
                compatible = "zmk,behavior-hold-tap";
                label = "RIGHT_POSITIONAL_HOLD_TAP";
                #binding-cells = <2>;
                flavor = "tap-preferred";
                tapping-term-ms = <150>;
                quick-tap-ms = <125>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 2 30 31 32>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
&kp Q &kp W &kp F &kp P &kp B                                                   &kp J &kp L &kp U &kp Y &kp SEMICOLON
&kp A &lh_pht LALT R &lh_pht LCTRL S &lh_pht LSHIFT T &kp G            &kp M &rh_pht RSHIFT N &rh_pht RCTRL E &rh_pht LALT I &rh_pht RGUI O
&kp Z &kp X &kp C &kp D &kp V                                                   &kp K &kp H &kp COMMA &kp PERIOD &kp SLASH
&kp ESC &lt NAV SPACE &lt NUM TAB                                               &lt MISC RETURN &lt NUM BACKSPACE &lt FUNC DELETE
                        >;
                };

                NUM_layer {
                        bindings = <
&kp LEFT_BRACKET &kp N7 &kp N8 &kp N9 &kp RIGHT_BRACKET         &none &none &none &none &none 
&kp APOSTROPHE &kp N4 &kp N5 &kp N6 &kp EQUAL                    &none &kp RSHIFT &kp RCTRL &kp RALT &kp RGUI 
&kp GRAVE &kp N1 &kp N2 &kp N3 &kp BACKSLASH                    &none &none &none &none &none 
&kp PERIOD &kp N0 &kp MINUS                                     &none &none &none
                        >;
                };
                
                FUNC_layer {
                        bindings = <
&kp F12 &kp F7 &kp F8 &kp F9 &none         &none &none &none &none &none 
&kp F11 &kp F4 &kp F5 &kp F6 &none         &none &kp RSHIFT &kp RCTRL &kp RALT &kp RGUI 
&kp F10 &kp F1 &kp F2 &kp F3 &none         &none &none &none &none &none 
&none &none &none                          &none &none &none
                        >;
                };

                NAV_layer {
                        bindings = <
&none &none &none &none &none                           &none &none &none &none &none 
&kp LGUI &kp LALT &kp LCTRL &kp LSHIFT &none            &kp CAPSLOCK &kp LEFT_ARROW &kp DOWN_ARROW &kp UP_ARROW &kp RIGHT_ARROW 
&none &none &none &none &none                           &kp INSERT &kp HOME &kp PAGE_DOWN &kp PAGE_UP &kp END
&none &none &none                                       &none &none &none
                        >;
                };

                MISC_layer {
                        bindings = <
&bt BT_CLR      &none &none &none &none        &none &none &none &none &tog NO_LEFT_MOD
&none           &none &none &none &none         &none &none &none &none &none
&none           &none &none &none &none         &none &none &none &none &none 
&none           &none &bootloader                          &bootloader &none &none
                        >;
                };

                NO_LEFT_MOD_layer {
                        bindings = <
&kp Q &kp W &kp F &kp P &kp B            &kp J &kp L &kp U &kp Y &kp SEMICOLON
&kp A &kp R &kp S &kp T &kp G            &kp M &rh_pht RSHIFT N &rh_pht RCTRL E &rh_pht LALT I &rh_pht RGUI O
&kp Z &kp X &kp C &kp D &kp V            &kp K &kp H &kp COMMA &kp PERIOD &kp SLASH
&kp ESC &lt NAV SPACE &lt NUM TAB        &lt MISC RETURN &lt NUM BACKSPACE &lt FUNC DELETE
                        >;
                };
        };        
};