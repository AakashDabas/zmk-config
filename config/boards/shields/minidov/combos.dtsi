#include "../../zmk-nodefree-config/keypos_def/keypos_36keys.h"

#define COMBO_TERM_FAST 35
#define COMBO_TERM_SLOW 40
#define COMBO_GLOBAL_QUICKTAP 100

/ {
  combos {
    compatible = "zmk,combos";

    combo_bracket_round_l {
      timeout-ms = <COMBO_TERM_FAST>;
      global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;

      key-positions = <LM2 LM1>;
      layers = <BASE BASE_QWERTY SYM NUM NUM_WORD>;
      bindings = <&kp LPAR>;
    };

    combo_bracket_round_r {
      timeout-ms = <COMBO_TERM_FAST>;
      global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;

      key-positions = <RM1 RM2>;
      layers = <BASE BASE_QWERTY SYM NUM NUM_WORD>;
      bindings = <&kp RPAR>;
    };

    combo_bracket_square_l {
      timeout-ms = <COMBO_TERM_SLOW>;
      global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;

      key-positions = <LB2 LB1>;
      layers = <BASE BASE_QWERTY SYM NUM NUM_WORD>;
      bindings = <&kp LBKT>;
    };

    combo_bracket_square_r {
      timeout-ms = <COMBO_TERM_SLOW>;
      global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;

      key-positions = <RB1 RB2>;
      layers = <BASE BASE_QWERTY SYM NUM NUM_WORD>;
      bindings = <&kp RBKT>;
    };

    combo_bracket_curly_l {
      timeout-ms = <COMBO_TERM_SLOW>;
      global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;

      key-positions = <LT2 LT1>;
      layers = <BASE BASE_QWERTY SYM NUM NUM_WORD>;
      bindings = <&kp LBRC>;
    };

    combo_bracket_curly_r {
      timeout-ms = <COMBO_TERM_SLOW>;
      global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;

      key-positions = <RT2 RT1>;
      layers = <BASE BASE_QWERTY SYM NUM NUM_WORD>;
      bindings = <&kp RBRC>;
    };

    combo_bracket_angled_l {
      timeout-ms = <COMBO_TERM_SLOW>;
      global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;

      key-positions = <LM1 LM0>;
      layers = <BASE BASE_QWERTY SYM NUM NUM_WORD>;
      bindings = <&kp LT>;
    };

    combo_bracket_angled_r {
      timeout-ms = <COMBO_TERM_SLOW>;
      global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;

      key-positions = <RM1 RM0>;
      layers = <BASE BASE_QWERTY SYM NUM NUM_WORD>;
      bindings = <&kp GT>;
    };

    combo_capsword {
      timeout-ms = <COMBO_TERM_SLOW>;
      global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;

      key-positions = <LM1 RM1>;
      layers = <BASE BASE_QWERTY>;
      bindings = <&caps_word_capslock >;
    };

    combo_return {
      timeout-ms = <COMBO_TERM_FAST>;
      global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;

      key-positions = <LH2 LH1 LH0>;
      layers = <BASE BASE_QWERTY NAV NUM SYM>;
      bindings = <&kp RET>;
    };

    combo_bspc {
      timeout-ms = <COMBO_TERM_FAST>;
      global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;

      key-positions = <LH1 LH0>;
      layers = <BASE BASE_QWERTY NAV NUM SYM>;
      bindings = <&kp BSPC>;
    };

    // combo_grave {
    //   timeout-ms = <COMBO_TERM_SLOW>;
    //   global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;

    //   key-positions = <RM3 RM4>;
    //   layers = <>;
    //   bindings = <&kp GRAVE>;
    // };

    // combo_md_code_block {
    //   timeout-ms = <COMBO_TERM_SLOW>;
    //   global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;

    //   key-positions = <RM2 RM3 RM4>;
    //   layers = <>;
    //   bindings = <&m_type_md_code_block>;
    // };

    combo_tog_nav_word {
      timeout-ms = <COMBO_TERM_SLOW>;
      global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;

      key-positions = <LM3 LM2 LM1>;
      layers = <BASE BASE_QWERTY NUM NUM_WORD>;
      bindings = <&nav_word>;
    };

    combo_tog_num_word {
      timeout-ms = <COMBO_TERM_SLOW>;
      global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;

      key-positions = <LB3 LB2 LB1>;
      layers = <BASE BASE_QWERTY NAV NAV_WORD>;
      bindings = <&num_word>;
    };
  };
};
